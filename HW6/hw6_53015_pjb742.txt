Homework #: 6
Student Name: Paul Benoit
EID: pjb742
CS login: paulbeno
Email address: paul.benoit36@gmail.com
Unique Number: 53015

--
What causes a page fault? What is the end result for the running process?
----------1.

A page fault occurs when a program accesses a page that is mapped in the virtual address space but not loaded in physical memory.
I/O interruption occurs and causes a delay to the program.

--
Sam P. Hacker is a Head Guru in a software company known for operating systems with very sorry quality. Hacker suggested a trick to reduce the pressure on the swap space. Instead of swapping out pages that belong to code texts into the swap area, the operating system could just take away the memory frames. If the code page is needed later, it could be paged directly from its binary file. Hacker's argument is that the operating system will save time by not storing the code page into the swap space, and will save space in the swap area. The code text exists on disk anyway, and could be fetched from there. Would you approve of this design? Why or why not?
----------2.

This design would not work well. This is ignoring the idea of memory being used as a cache. This does not use the ideas of locality at all. 

--
What is TLB (Translation Lookaside Buffer)? What issue it tries to solve? How does it solve that issue?
----------3.

A TLB is a small, virtually addressed cache where each line holds a block
consisting of a single PTE. A TLB usually has a high degree of associativity. 
It helps speed up address translation by eliminating the need for the MMU to refer to a PTE everytime it needs to translate the virtual address into a physical address

--
Consider a multi-level paging system with 128 pages and a page size of 256 bytes. The system has 1024 bytes of physical memory and is byte addressable. Assume the first-level page table holds 8 entries.
How many bits are in a physical address?
How many bits of the virtual address represent the first-level page table?
How many bits of the virtual address represent the page number?
How many bits are in the complete virtual address?
What size are the page frames?
----------4.

1. 10  bits
2. 3   bits
3. 4   bits
4. 15  bits
5. 256 bytes

--
What is the difference between global and local page replacement policies? Name a disadvantage of each.
----------5.

When a process incurs a page fault, a local page replacement algorithm selects for replacement some page that belongs to that same process (or a group of processes sharing a memory partition). A global replacement algorithm is free to select any page in memory
Disadvantage of Local page replacement: Only have access to pages that are within your process. May have to swap out too often
Disadvantage of Global page replacement: Compete for resources to the point of deadlock

--
Belady's anomaly: Intuitively, it seems that the more frames the memory has, the fewer page faults a program will get. Surprisingly enough, this is not always true. Belady (1969) discovered an example in which FIFO page replacement causes more faults with four page frames than with three. This strange situation has become known as Belady's anomaly. To illustrate, a program with five virtual pages numbered from 0 to 4 references its pages in the order: 
0 1 2 3 0 1 4 0 1 2 3 4
Using FIFO replacement and assuming demand paging, compute the number of page faults with 3 frames. Repeat for 4 frames.
Compute the number of page faults under LRU, the clock algorithm, and the optimal algorithm. What do you notice?
----------6.

0 1 2 3 0 1 4 0 1 2 3 4
-----------------------
0 1 2 3 0 1 4 4 4 2 3 3
  0 1 2 3 0 1 1 1 4 2 2
    0 1 2 3 0 0 0 1 4 4
* * * * * * *     * *

0 1 2 3 0 1 4 0 1 2 3 4
-----------------------
0 1 2 3 3 3 4 0 1 2 3 4
  0 1 2 2 2 3 4 0 1 2 3
    0 1 1 1 2 3 4 0 1 2
      0 0 0 1 2 3 4 0 1
* * * *     * * * * * *

1. 3 frames - 9  times
   4 frames - 10 times

2. LRU -     10 times with 3 frames
   Clock -   8 times
   Optimal - 7 times